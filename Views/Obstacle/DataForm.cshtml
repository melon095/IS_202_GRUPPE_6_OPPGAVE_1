@model Gruppe6Oppgave1.Models.ObstacleData
@{
    ViewData["Title"] = "Register Obstacle";
}

<section class="max-w-4xl mx-auto mt-10 bg-white rounded-xl shadow-lg ring-1 ring-gray-200 p-6">
    <h1 class="text-2xl font-semibold text-gray-800 mb-6">Obstacle Registration Form</h1>

    <!-- ÉN form som inneholder både felter og kart -->
    <form asp-action="DataForm" method="post" class="space-y-6">

        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <!-- Venstre kolonne: felter -->
            <div class="space-y-5">
                <div>
                    <label asp-for="Objektnavn" class="block text-sm font-medium text-gray-700 mb-1">Objekt navn</label>
                    <input asp-for="Objektnavn" class="w-full rounded-md border-gray-300 focus:border-indigo-500 focus:ring-indigo-500 p-2" placeholder="Lysstolpe, flaggstang" />
                    <span asp-validation-for="Objektnavn" class="text-sm text-red-600"></span>
                </div>

                <div>
                    <label asp-for="Objekt_beskrivelse" class="block text-sm font-medium text-gray-700 mb-1">Objekt beskrivelse</label>
                    <input asp-for="Objekt_beskrivelse" class="w-full rounded-md border-gray-300 focus:border-indigo-500 focus:ring-indigo-500 p-2" />
                    <span asp-validation-for="Objekt_beskrivelse" class="text-sm text-red-600"></span>
                </div>

                <div>
                    <label asp-for="Lattitude" class="block text-sm font-medium text-gray-700 mb-1">Latitude</label>
                    <input asp-for="Lattitude" type="number" step="0.000001" class="w-full rounded-md border-gray-300 focus:border-indigo-500 focus:ring-indigo-500 p-2" />
                    <span asp-validation-for="Lattitude" class="text-sm text-red-600"></span>
                </div>

                <div>
                    <label asp-for="Longitude" class="block text-sm font-medium text-gray-700 mb-1">Longitude</label>
                    <input asp-for="Longitude" type="number" step="0.000001" class="w-full rounded-md border-gray-300 focus:border-indigo-500 focus:ring-indigo-500 p-2" />
                    <span asp-validation-for="Longitude" class="text-sm text-red-600"></span>
                </div>

                <div>
                    <label asp-for="AMSL" class="block text-sm font-medium text-gray-700 mb-1">Height (foot)</label>
                    <input asp-for="AMSL" type="number" step="0.01" class="w-full rounded-md border-gray-300 focus:border-indigo-500 focus:ring-indigo-500 p-2" />
                    <span asp-validation-for="AMSL" class="text-sm text-red-600"></span>
                </div>
            </div>

            <!-- Høyre kolonne: kart -->
            <div>
                <div id="regMap" class="w-full rounded-md border border-gray-200" style="height:60vh"></div>
            </div>
        </div>

        <!-- ÉN submit-knapp -->
        <button type="submit" class="inline-flex items-center justify-center rounded-lg bg-indigo-600 px-4 py-2 text-white hover:bg-indigo-700">
            Submit Data
        </button>
    </form>
</section>

@section Styles {
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
}

@section Scripts {
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    <script>
        // Init kart
        const map = L.map('regMap').setView([60.472, 8.4689], 5);
        L.tileLayer('https://cache.kartverket.no/v1/wmts/1.0.0/topo/default/webmercator/{z}/{y}/{x}.png',
          { attribution: '© Kartverket' }).addTo(map);

        // Hent input-elementer (id = property-navn fra asp-for)
        const latEl = document.getElementById('Lattitude');  // behold "Lattitude" hvis modellen din heter sånn
        const lngEl = document.getElementById('Longitude');
        let marker;

        function validLatLng(lat, lng){
          return isFinite(lat) && isFinite(lng) && lat >= -90 && lat <= 90 && lng >= -180 && lng <= 180;
        }

        function updateMarkerFromInputs(pan = true){
          const lat = parseFloat((latEl?.value || '').replace(',', '.'));
          const lng = parseFloat((lngEl?.value || '').replace(',', '.'));
          if (!validLatLng(lat, lng)) return;

          if (!marker) marker = L.marker([lat, lng]).addTo(map);
          else marker.setLatLng([lat, lng]);

          if (pan) map.setView([lat, lng], Math.max(map.getZoom(), 12));
        }

        // Klikk i kartet → oppdater feltene
        map.on('click', e => {
          const { lat, lng } = e.latlng;
          if (latEl) latEl.value = lat.toFixed(6);
          if (lngEl) lngEl.value = lng.toFixed(6);
          updateMarkerFromInputs(false);
        });

        // Skriving i feltene → flytt markør
        ['input','change','blur'].forEach(evt => {
          if (latEl) latEl.addEventListener(evt, () => updateMarkerFromInputs(false));
          if (lngEl) lngEl.addEventListener(evt, () => updateMarkerFromInputs(false));
        });

        // Hvis modellen har verdier ved load
        document.addEventListener('DOMContentLoaded', () => updateMarkerFromInputs(true));
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
